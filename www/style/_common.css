.button {
  @reuse .b;
  @reuse .black;
  @reuse .br-pill;
  @reuse .color-inherit;
  @reuse .inline-flex;
  @reuse .flex-nowrap;
  @reuse .items-center;
  @reuse .justify-center;
  @reuse .no-underline;
  @reuse .ph3;
  @reuse .pv2;
  @reuse .tc;
  @reuse .tracked;
  @reuse .ttu;

  &--wide {
    @reuse .ph4;
  }

  &--wide-left {
    @reuse .pl4;
    @reuse .pr3;
  }

  &--wide-right {
    @reuse .pl3;
    @reuse .pr4;
  }

  &--primary,
  &--secondary {
    @reuse .white;
    @reuse .button--wide;
  }

  &--primary {
    @reuse .bg-brand-dark;
  }

  &--secondary {
    @reuse .bg-green;
  }
}

.buttons {
  @reuse .inline-flex;
  @reuse .flex-wrap;
  @reuse .nb1;
  @reuse .nl2;
  @reuse .nr2;
  @reuse .nt1;

  .button {
    @reuse .mh2;
    @reuse .mv1;
  }
}

.small-img {
  @reuse .w2;
}

.banner--mask-1 {
  @reuse .bg-inherit;
  @reuse .relative;
  @reuse .db;

  & > img {
    mask-image: url(../media/mask-banner-left-1.svg);
    -webkit-mask-attachment: fixed;
    mask-position: center center;
    mask-repeat: no-repeat;
    mask-size: contain;
    height: 100%;
    width: 100%;
  }
}

.banner--mask-2 {
  @reuse .bg-inherit;
  @reuse .relative;
  @reuse .db;

  & > img {
    mask-image: url(../media/mask-banner-right-1.svg);
    mask-position: center center;
    mask-repeat: no-repeat;
    mask-size: contain;
    height: 100%;
    width: 100%;
  }
}

.module {
  @reuse .mv5;

  @media (--breakpoint-not-small) {
    @reuse .mv6;
  }

  @media (--breakpoint-large) {
    @reuse .mv7;
  }
}

.link-underline {
  background-image: linear-gradient(currentColor, currentColor);
  background-repeat: no-repeat;
  background-size: 0% 0.125rem;
  background-position: bottom right;
  transition: background-size 0.2s ease-in;
  transition-property: background-size;
}

.link-underline-reveal {
  background-size: 100% 0.125rem;
  background-position: bottom left;
}

.active-menu-button {
  @reuse .o-0;

  &:first-of-type,
  &:last-of-type {
    @reuse .o-100;
  }

  &:first-of-type {
    transform: rotate(-45deg) translate(-0.25rem, 0.25rem);
  }

  &:last-of-type {
    transform: rotate(45deg) translate(-0.25rem, -0.25rem);
  }
}
